on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule: # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#onschedule
    - cron: '0 0 * * 0' # at midnight of each sunday

name: CI

env:
  CI_RUST_TOOLCHAIN: 1.51

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.CI_RUST_TOOLCHAIN }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.CI_RUST_TOOLCHAIN }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features -- --test-threads=1

  fmt:
    name: Fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.CI_RUST_TOOLCHAIN }}
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.CI_RUST_TOOLCHAIN }}
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features -- -D warnings

  e2e-test:
    name: E2E Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.CI_RUST_TOOLCHAIN }}
          override: true

      - name: Check out minio code
        uses: actions/checkout@v2
        with:
          repository: minio/minio
          ref: 632252ff1ddc12574cf379240e01ee92651777f6
          path: ./minio

      - name: Select test groups
        run: |
          pushd ./minio/mint

          enabled_test_groups=("mc" "s3cmd")
          
          mkdir tmp_build
          mkdir tmp_run_core
          for test_group_name in ${enabled_test_groups[@]}
          do
            mv ./build/$test_group_name tmp_build/
            mv ./run/core/$test_group_name tmp_run_core/
          done
          rm -rf build
          rm -rf run/core
          mv tmp_build build
          mv tmp_run_core run/core

          rm remove-packages.list
          touch remove-packages.list

          popd
      
      - name: Build mint
        run: |
          pushd ./minio
          docker build -t minio/mint . -f Dockerfile.mint
          popd

      - name: Build s3-server
        uses: actions-rs/cargo@v1
        with:
          command: build 
          args: --features binary --bins --release

      - name: Run mint
        run: |
          mkdir data
          RUST_LOG=info ./scripts/s3-server.sh data --release 1>/dev/null &
          ./scripts/mint.sh
